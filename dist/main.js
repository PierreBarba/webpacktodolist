(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  padding: 12px;\n  font-family: 'calibri', sans-serif;\n  color: #777;\n}\n\n.containerTitle {\n  margin: 10px auto 80px auto;\n}\n\n.list {\n z-index: -1 ;\n font-family:Verdana, sans-serif;\n text-align: center;\n color: #6495ed;\n width: 24rem;\n height: 100%;\n margin-top: 10px;\n margin-left: auto;\n margin-bottom: 18px;\n margin-right: auto;\n font-size: 2.3em;\n text-shadow:  3px 3px 10px rgba(0, 0, 0, 0.2);\n}\n\n.list2 {\n  font-family:Verdana, sans-serif;\n  text-align: center;\n  color: #fff;\n  width: 23.8rem;\n  height: 100%;\n  margin-top: 10px;\n  margin-left: auto;\n  margin-bottom: 18px;\n  margin-right: auto;\n  font-size: 2.3em;\n }\n\n\n.to-do-container {\n  background-color: #eee;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 1px 0;\n  margin: auto;\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.3);\n}\n\n.title-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n}\n\n.today-title {\n  margin: 10px 10px 10px 0px;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 0.5rem 1rem;\n  text-align: left;\n}\n\n.reload {\n  background-color: transparent;\n  margin: 10px;\n  height: 10px;\n  width: 10px;\n  border: none;\n  cursor: pointer;\n}\n\n.add-task-form {\n  width: 100%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  padding: 0 1rem;\n}\n\n.add-task {\n  margin: 10px 10px 10px 0px;\n  flex: 20;\n  border: none;\n  padding: 0.5rem 0;\n  font-size: 10px;\n  font-family: Verdana, sans-serif;\n  font-style: italic;\n  font-weight: 100;\n  outline: none;\n}\n\n.add-task::placeholder {\n  color: #bbb;\n}\n\n.submit {\n  background-color: transparent;\n  height: 10px;\n  width: 10px;\n  border: none;\n  cursor: pointer;\n}\n\n.to-do-list {\n  list-style: none;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 1px 0;\n}\n\n.task {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 0.3rem 0;\n}\n\n.focus {\n  background-color:rgb(164, 189, 237);\n}\n\n.task > * {\n  display: inline-block;\n  margin: 0 5px;\n  flex: 1;\n  vertical-align: middle;\n}\n\n.checkbox {\n  height: 12px;\n}\n\n.task-description {\n  border: none;\n  background-color: transparent;\n  flex: 20;\n  font-size: 12px;\n  outline: none;\n}\n\n.task > span {\n  text-align: right;\n  padding-right: 5px;\n  cursor: pointer;\n}\n\n.clear-all {\n  width: 100%;\n  text-align: center;\n  padding: 0.65rem;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.hidden {\n  display: none;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,kCAAkC;EAClC,WAAW;AACb;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;CACC,YAAY;CACZ,+BAA+B;CAC/B,kBAAkB;CAClB,cAAc;CACd,YAAY;CACZ,YAAY;CACZ,gBAAgB;CAChB,iBAAiB;CACjB,mBAAmB;CACnB,kBAAkB;CAClB,gBAAgB;CAChB,6CAA6C;AAC9C;;AAEA;EACE,+BAA+B;EAC/B,kBAAkB;EAClB,WAAW;EACX,cAAc;EACd,YAAY;EACZ,gBAAgB;EAChB,iBAAiB;EACjB,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;CACjB;;;AAGD;EACE,sBAAsB;EACtB,UAAU;EACV,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,2BAA2B;EAC3B,UAAU;EACV,YAAY;EACZ,2CAA2C;AAC7C;;AAEA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,sBAAsB;AACxB;;AAEA;EACE,0BAA0B;EAC1B,eAAe;EACf,gBAAgB;EAChB,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,sBAAsB;EACtB,aAAa;EACb,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,0BAA0B;EAC1B,QAAQ;EACR,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,gCAAgC;EAChC,kBAAkB;EAClB,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,WAAW;EACX,aAAa;EACb,sBAAsB;EACtB,2BAA2B;EAC3B,mBAAmB;EACnB,UAAU;AACZ;;AAEA;EACE,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,mCAAmC;AACrC;;AAEA;EACE,qBAAqB;EACrB,aAAa;EACb,OAAO;EACP,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,6BAA6B;EAC7B,QAAQ;EACR,eAAe;EACf,aAAa;AACf;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,aAAa;AACf",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  padding: 12px;\n  font-family: 'calibri', sans-serif;\n  color: #777;\n}\n\n.containerTitle {\n  margin: 10px auto 80px auto;\n}\n\n.list {\n z-index: -1 ;\n font-family:Verdana, sans-serif;\n text-align: center;\n color: #6495ed;\n width: 24rem;\n height: 100%;\n margin-top: 10px;\n margin-left: auto;\n margin-bottom: 18px;\n margin-right: auto;\n font-size: 2.3em;\n text-shadow:  3px 3px 10px rgba(0, 0, 0, 0.2);\n}\n\n.list2 {\n  font-family:Verdana, sans-serif;\n  text-align: center;\n  color: #fff;\n  width: 23.8rem;\n  height: 100%;\n  margin-top: 10px;\n  margin-left: auto;\n  margin-bottom: 18px;\n  margin-right: auto;\n  font-size: 2.3em;\n }\n\n\n.to-do-container {\n  background-color: #eee;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 1px 0;\n  margin: auto;\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.3);\n}\n\n.title-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background-color: #fff;\n}\n\n.today-title {\n  margin: 10px 10px 10px 0px;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 0.5rem 1rem;\n  text-align: left;\n}\n\n.reload {\n  background-color: transparent;\n  margin: 10px;\n  height: 10px;\n  width: 10px;\n  border: none;\n  cursor: pointer;\n}\n\n.add-task-form {\n  width: 100%;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  padding: 0 1rem;\n}\n\n.add-task {\n  margin: 10px 10px 10px 0px;\n  flex: 20;\n  border: none;\n  padding: 0.5rem 0;\n  font-size: 10px;\n  font-family: Verdana, sans-serif;\n  font-style: italic;\n  font-weight: 100;\n  outline: none;\n}\n\n.add-task::placeholder {\n  color: #bbb;\n}\n\n.submit {\n  background-color: transparent;\n  height: 10px;\n  width: 10px;\n  border: none;\n  cursor: pointer;\n}\n\n.to-do-list {\n  list-style: none;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 1px 0;\n}\n\n.task {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  background-color: white;\n  padding: 0.3rem 0;\n}\n\n.focus {\n  background-color:rgb(164, 189, 237);\n}\n\n.task > * {\n  display: inline-block;\n  margin: 0 5px;\n  flex: 1;\n  vertical-align: middle;\n}\n\n.checkbox {\n  height: 12px;\n}\n\n.task-description {\n  border: none;\n  background-color: transparent;\n  flex: 20;\n  font-size: 12px;\n  outline: none;\n}\n\n.task > span {\n  text-align: right;\n  padding-right: 5px;\n  cursor: pointer;\n}\n\n.clear-all {\n  width: 100%;\n  text-align: center;\n  padding: 0.65rem;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.completed {\n  text-decoration: line-through;\n}\n\n.hidden {\n  display: none;\n}\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=i(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}o.push(d)}return o}function i(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var s=t(a[o]);e[s].references--}for(var A=r(n,i),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),i=t.n(r),a=t(569),o=t.n(a),s=t(565),A=t.n(s),c=t(216),l=t.n(c),d=t(589),p=t.n(d),u=t(426),f={};f.styleTagTransform=p(),f.setAttributes=A(),f.insert=o().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=l(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;class m{constructor(n="",e=0){this.description=n,this.completed=!1,this.index=e}set setDescription(n=""){n&&(this.description=n)}set setCompleted(n){this.completed=n}set setIndex(n=0){"number"!=typeof n||n<0||(this.index=n)}get getDescription(){return this.description}get getCompleted(){return this.completed}get getIndex(){return this.index}isCompleted(){return this.completed}toggleCompleted(){this.completed=!this.completed}}function g(n){const e=document.createElement("li");e.setAttribute("true"),e.className="task",e.innerHTML=`<input type="checkbox" class="checkbox">\n      <input class="task-description" value="${n}">\n      <span id="trash" class="hidden">&#128465;</span>\n      </input>\n      <span id="move">&#8942;</span>\n      `;const t=e.children[0];t.addEventListener("change",(()=>{t.checked?e.classList.add("completed"):e.classList.remove("completed")}));const r=e.children[1];r.addEventListener("focus",(()=>{r.parentElement.classList.toggle("focus"),r.parentElement.children[3].classList.add("hidden"),r.parentElement.children[2].classList.remove("hidden")})),r.addEventListener("blur",(()=>{setTimeout((()=>{r.parentElement.children[3].classList.remove("hidden"),r.parentElement.children[2].classList.add("hidden"),r.parentElement.classList.toggle("focus")}),100)}));const i=e.children[2];return i.addEventListener("click",(()=>{i.parentElement.parentElement&&setTimeout((()=>{i.parentElement.parentElement.removeChild(i.parentElement)}),10)})),e}function h(n,e){localStorage.setItem(n,JSON.stringify(e))}const C=new class{constructor(n=[]){this.taskList=n}get getTaskList(){return this.taskList}set setTaskList(n=[]){n&&(this.taskList=n)}getLength(){return this.taskList.length}addTask(n){this.taskList.push(n)}removeTask(n){this.taskList.splice(n,1)}updateTaskIndex(){this.sortTasks();for(let n=0;n<this.taskList.length;n+=1)this.taskList[n].index=n}removeCompleted(){this.taskList=this.taskList.filter((n=>!n.completed))}sortTasks(){for(let n=0;n<this.taskList.length-1;n+=1)for(let e=0;e<this.taskList.length-1-n;e+=1)if(this.taskList[e].index>this.taskList[e+1].index){const n=this.taskList[e+1];this.taskList[e+1]=this.taskList[e],this.taskList[e]=n}}};var E;C.taskList=(E="tasks",localStorage.getItem(E)||localStorage.setItem(E,JSON.stringify([])),JSON.parse(localStorage.getItem(E)));const B=document.querySelector(".to-do-list");function x(n){const e=document.querySelectorAll(".checkbox");n.addEventListener("change",(()=>{const t=Array.prototype.indexOf.call(e,n);C.taskList[t].completed=!C.taskList[t].completed,h("tasks",C.taskList)}))}function k(n){n.sortTasks();for(let e=0;e<n.taskList.length;e+=1){const t=g(n.taskList[e].description);B.appendChild(t),x(t.children[0])}}k(C),h("tasks",C.taskList);const b=document.querySelector("form");b.addEventListener("submit",(n=>{n.preventDefault();const e=b.children[0].value;if(!e)return;const t=g(e);B.appendChild(t),x(t.children[0]),b.children[0].value="";const r=new m(e,C.taskList.length);C.addTask(r),C.updateTaskIndex(),h("tasks",C.taskList)})),document.querySelector(".clear-all").addEventListener("click",(()=>{for(let n=B.children.length-1;n>=0;n-=1)B.children[n].children[0].checked&&B.removeChild(B.children[n]);C.removeCompleted(),C.sortTasks(),C.updateTaskIndex(),h("tasks",C.taskList)})),document.querySelectorAll("#trash").forEach((n=>{n.addEventListener("click",(()=>{const e=Array.prototype.indexOf.call(n.parentElement.parentElement.children,n.parentElement);C.removeTask(e),h("tasks",C.taskList)}))})),document.querySelector(".reload").addEventListener("click",(()=>{B.innerHTML="",k(C)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,